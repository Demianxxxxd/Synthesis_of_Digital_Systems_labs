// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AES_CTR_xcrypt_buffe.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AES_CTR_xcrypt_buffe::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AES_CTR_xcrypt_buffe::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state1 = "1";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state2 = "10";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state3 = "100";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state4 = "1000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state5 = "10000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state6 = "100000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state7 = "1000000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state8 = "10000000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state9 = "100000000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state10 = "1000000000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state11 = "10000000000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state12 = "100000000000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<14> AES_CTR_xcrypt_buffe::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_1 = "1";
const sc_lv<1> AES_CTR_xcrypt_buffe::ap_const_lv1_0 = "0";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_2 = "10";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_4 = "100";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_5 = "101";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_8 = "1000";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_9 = "1001";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_B = "1011";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_C = "1100";
const sc_lv<1> AES_CTR_xcrypt_buffe::ap_const_lv1_1 = "1";
const sc_lv<5> AES_CTR_xcrypt_buffe::ap_const_lv5_0 = "00000";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_D = "1101";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_10 = "10000";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_3 = "11";
const sc_lv<3> AES_CTR_xcrypt_buffe::ap_const_lv3_0 = "000";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_6 = "110";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_7 = "111";
const sc_lv<32> AES_CTR_xcrypt_buffe::ap_const_lv32_A = "1010";
const sc_lv<5> AES_CTR_xcrypt_buffe::ap_const_lv5_F = "1111";
const sc_lv<8> AES_CTR_xcrypt_buffe::ap_const_lv8_0 = "00000000";
const sc_lv<5> AES_CTR_xcrypt_buffe::ap_const_lv5_10 = "10000";
const sc_lv<5> AES_CTR_xcrypt_buffe::ap_const_lv5_1 = "1";
const sc_lv<2> AES_CTR_xcrypt_buffe::ap_const_lv2_0 = "00";
const sc_lv<3> AES_CTR_xcrypt_buffe::ap_const_lv3_4 = "100";
const sc_lv<3> AES_CTR_xcrypt_buffe::ap_const_lv3_1 = "1";
const sc_lv<8> AES_CTR_xcrypt_buffe::ap_const_lv8_FF = "11111111";
const sc_lv<5> AES_CTR_xcrypt_buffe::ap_const_lv5_1F = "11111";
const sc_lv<8> AES_CTR_xcrypt_buffe::ap_const_lv8_1 = "1";
const bool AES_CTR_xcrypt_buffe::ap_const_boolean_1 = true;

AES_CTR_xcrypt_buffe::AES_CTR_xcrypt_buffe(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buffer_U = new AES_CTR_xcrypt_buffe_buffer("buffer_U");
    buffer_U->clk(ap_clk);
    buffer_U->reset(ap_rst);
    buffer_U->address0(buffer_address0);
    buffer_U->ce0(buffer_ce0);
    buffer_U->we0(buffer_we0);
    buffer_U->d0(buffer_d0);
    buffer_U->q0(buffer_q0);
    x_U = new AES_CTR_xcrypt_buffe_x("x_U");
    x_U->clk(ap_clk);
    x_U->reset(ap_rst);
    x_U->address0(x_address0);
    x_U->ce0(x_ce0);
    x_U->we0(x_we0);
    x_U->d0(x_d0);
    x_U->q0(x_q0);
    x_U->address1(grp_Cipher_fu_259_state_address1);
    x_U->ce1(x_ce1);
    x_U->we1(x_we1);
    x_U->d1(grp_Cipher_fu_259_state_d1);
    x_U->q1(x_q1);
    grp_Cipher_fu_259 = new Cipher("grp_Cipher_fu_259");
    grp_Cipher_fu_259->ap_clk(ap_clk);
    grp_Cipher_fu_259->ap_rst(ap_rst);
    grp_Cipher_fu_259->ap_start(grp_Cipher_fu_259_ap_start);
    grp_Cipher_fu_259->ap_done(grp_Cipher_fu_259_ap_done);
    grp_Cipher_fu_259->ap_idle(grp_Cipher_fu_259_ap_idle);
    grp_Cipher_fu_259->ap_ready(grp_Cipher_fu_259_ap_ready);
    grp_Cipher_fu_259->state_address0(grp_Cipher_fu_259_state_address0);
    grp_Cipher_fu_259->state_ce0(grp_Cipher_fu_259_state_ce0);
    grp_Cipher_fu_259->state_we0(grp_Cipher_fu_259_state_we0);
    grp_Cipher_fu_259->state_d0(grp_Cipher_fu_259_state_d0);
    grp_Cipher_fu_259->state_q0(x_q0);
    grp_Cipher_fu_259->state_address1(grp_Cipher_fu_259_state_address1);
    grp_Cipher_fu_259->state_ce1(grp_Cipher_fu_259_state_ce1);
    grp_Cipher_fu_259->state_we1(grp_Cipher_fu_259_state_we1);
    grp_Cipher_fu_259->state_d1(grp_Cipher_fu_259_state_d1);
    grp_Cipher_fu_259->state_q1(x_q1);
    grp_Cipher_fu_259->RoundKey_address0(grp_Cipher_fu_259_RoundKey_address0);
    grp_Cipher_fu_259->RoundKey_ce0(grp_Cipher_fu_259_RoundKey_ce0);
    grp_Cipher_fu_259->RoundKey_q0(ctx_RoundKey_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln485_1_fu_347_p2);
    sensitive << ( zext_ln483_reg_543 );
    sensitive << ( zext_ln485_1_fu_343_p1 );

    SC_METHOD(thread_add_ln485_fu_369_p2);
    sensitive << ( shl_ln_reg_556 );
    sensitive << ( zext_ln484_fu_339_p1 );

    SC_METHOD(thread_add_ln493_1_fu_423_p2);
    sensitive << ( zext_ln491_reg_579 );
    sensitive << ( zext_ln493_1_fu_419_p1 );

    SC_METHOD(thread_add_ln493_fu_445_p2);
    sensitive << ( shl_ln1_reg_592 );
    sensitive << ( zext_ln492_fu_415_p1 );

    SC_METHOD(thread_add_ln591_fu_483_p2);
    sensitive << ( ctx_Iv_q0 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_456);
    sensitive << ( icmp_ln575_reg_521 );
    sensitive << ( tmp_9_reg_615 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln574_fu_268_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_bi_2_phi_fu_251_p4);
    sensitive << ( icmp_ln575_reg_521 );
    sensitive << ( tmp_9_reg_615 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln587_fu_471_p2 );
    sensitive << ( bi_2_reg_248 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln574_fu_268_p2 );

    SC_METHOD(thread_bi_3_fu_500_p2);
    sensitive << ( ap_phi_mux_bi_2_phi_fu_251_p4 );

    SC_METHOD(thread_bi_fu_477_p2);
    sensitive << ( bi_1_reg_236 );

    SC_METHOD(thread_buf_r_address0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( buf_addr_reg_632 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln597_fu_490_p1 );

    SC_METHOD(thread_buf_r_ce0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_buf_r_d0);
    sensitive << ( buf_r_q0 );
    sensitive << ( buffer_q0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_buf_r_we0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_buffer_address0);
    sensitive << ( zext_ln55_reg_533 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln485_fu_374_p1 );
    sensitive << ( zext_ln493_fu_450_p1 );
    sensitive << ( sext_ln597_fu_495_p1 );

    SC_METHOD(thread_buffer_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_buffer_d0);
    sensitive << ( ctx_Iv_q0 );
    sensitive << ( x_q0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_buffer_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ctx_Iv_address0);
    sensitive << ( icmp_ln575_reg_521 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln55_fu_298_p1 );
    sensitive << ( tmp_9_reg_615 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ctx_Iv_addr_1_reg_619 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln587_fu_471_p2 );
    sensitive << ( zext_ln587_fu_466_p1 );

    SC_METHOD(thread_ctx_Iv_ce0);
    sensitive << ( icmp_ln575_reg_521 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_9_reg_615 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln587_fu_471_p2 );

    SC_METHOD(thread_ctx_Iv_d0);
    sensitive << ( icmp_ln587_fu_471_p2 );
    sensitive << ( add_ln591_fu_483_p2 );
    sensitive << ( ap_condition_456 );

    SC_METHOD(thread_ctx_Iv_we0);
    sensitive << ( icmp_ln575_reg_521 );
    sensitive << ( tmp_9_reg_615 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln587_fu_471_p2 );

    SC_METHOD(thread_ctx_RoundKey_address0);
    sensitive << ( grp_Cipher_fu_259_RoundKey_address0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_ctx_RoundKey_ce0);
    sensitive << ( grp_Cipher_fu_259_RoundKey_ce0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_grp_Cipher_fu_259_ap_start);
    sensitive << ( grp_Cipher_fu_259_ap_start_reg );

    SC_METHOD(thread_i_7_fu_321_p2);
    sensitive << ( i_0_i2_reg_192 );

    SC_METHOD(thread_i_8_fu_397_p2);
    sensitive << ( i_0_i3_reg_214 );

    SC_METHOD(thread_i_9_fu_274_p2);
    sensitive << ( i_0_reg_157 );

    SC_METHOD(thread_i_fu_292_p2);
    sensitive << ( i_0_i_reg_181 );

    SC_METHOD(thread_icmp_ln483_fu_315_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i_0_i2_reg_192 );

    SC_METHOD(thread_icmp_ln484_fu_357_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( k_0_i_reg_203 );

    SC_METHOD(thread_icmp_ln491_fu_391_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i_0_i3_reg_214 );

    SC_METHOD(thread_icmp_ln492_fu_433_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( k_0_i5_reg_225 );

    SC_METHOD(thread_icmp_ln54_fu_286_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_i_reg_181 );

    SC_METHOD(thread_icmp_ln574_fu_268_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_157 );

    SC_METHOD(thread_icmp_ln575_fu_280_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln574_fu_268_p2 );
    sensitive << ( bi_0_reg_169 );

    SC_METHOD(thread_icmp_ln587_fu_471_p2);
    sensitive << ( ctx_Iv_q0 );
    sensitive << ( icmp_ln575_reg_521 );
    sensitive << ( tmp_9_reg_615 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_k_1_fu_439_p2);
    sensitive << ( k_0_i5_reg_225 );

    SC_METHOD(thread_k_fu_363_p2);
    sensitive << ( k_0_i_reg_203 );

    SC_METHOD(thread_sext_ln585_fu_454_p1);
    sensitive << ( bi_1_reg_236 );

    SC_METHOD(thread_sext_ln597_fu_495_p1);
    sensitive << ( ap_phi_mux_bi_2_phi_fu_251_p4 );

    SC_METHOD(thread_shl_ln1_fu_407_p3);
    sensitive << ( trunc_ln493_fu_403_p1 );

    SC_METHOD(thread_shl_ln_fu_331_p3);
    sensitive << ( trunc_ln485_fu_327_p1 );

    SC_METHOD(thread_tmp_9_fu_458_p3);
    sensitive << ( bi_1_reg_236 );

    SC_METHOD(thread_tmp_fu_303_p3);
    sensitive << ( i_0_i2_reg_192 );

    SC_METHOD(thread_tmp_s_fu_379_p3);
    sensitive << ( i_0_i3_reg_214 );

    SC_METHOD(thread_trunc_ln485_fu_327_p1);
    sensitive << ( i_0_i2_reg_192 );

    SC_METHOD(thread_trunc_ln493_fu_403_p1);
    sensitive << ( i_0_i3_reg_214 );

    SC_METHOD(thread_x_address0);
    sensitive << ( x_addr_reg_561 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_Cipher_fu_259_state_address0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln493_2_fu_428_p1 );

    SC_METHOD(thread_x_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_Cipher_fu_259_state_ce0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_x_ce1);
    sensitive << ( grp_Cipher_fu_259_state_ce1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_x_d0);
    sensitive << ( buffer_q0 );
    sensitive << ( grp_Cipher_fu_259_state_d0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_x_we0);
    sensitive << ( grp_Cipher_fu_259_state_we0 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_x_we1);
    sensitive << ( grp_Cipher_fu_259_state_we1 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_zext_ln483_fu_311_p1);
    sensitive << ( tmp_fu_303_p3 );

    SC_METHOD(thread_zext_ln484_fu_339_p1);
    sensitive << ( k_0_i_reg_203 );

    SC_METHOD(thread_zext_ln485_1_fu_343_p1);
    sensitive << ( k_0_i_reg_203 );

    SC_METHOD(thread_zext_ln485_2_fu_352_p1);
    sensitive << ( add_ln485_1_fu_347_p2 );

    SC_METHOD(thread_zext_ln485_fu_374_p1);
    sensitive << ( add_ln485_fu_369_p2 );

    SC_METHOD(thread_zext_ln491_fu_387_p1);
    sensitive << ( tmp_s_fu_379_p3 );

    SC_METHOD(thread_zext_ln492_fu_415_p1);
    sensitive << ( k_0_i5_reg_225 );

    SC_METHOD(thread_zext_ln493_1_fu_419_p1);
    sensitive << ( k_0_i5_reg_225 );

    SC_METHOD(thread_zext_ln493_2_fu_428_p1);
    sensitive << ( add_ln493_1_fu_423_p2 );

    SC_METHOD(thread_zext_ln493_fu_450_p1);
    sensitive << ( add_ln493_reg_610 );

    SC_METHOD(thread_zext_ln55_fu_298_p1);
    sensitive << ( i_0_i_reg_181 );

    SC_METHOD(thread_zext_ln587_fu_466_p1);
    sensitive << ( sext_ln585_fu_454_p1 );

    SC_METHOD(thread_zext_ln597_fu_490_p1);
    sensitive << ( i_0_reg_157 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln575_fu_280_p2 );
    sensitive << ( icmp_ln575_reg_521 );
    sensitive << ( icmp_ln574_fu_268_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln54_fu_286_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln483_fu_315_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln484_fu_357_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln491_fu_391_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln492_fu_433_p2 );
    sensitive << ( tmp_9_reg_615 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( icmp_ln587_fu_471_p2 );
    sensitive << ( grp_Cipher_fu_259_ap_done );
    sensitive << ( ap_CS_fsm_state8 );

    ap_CS_fsm = "00000000000001";
    grp_Cipher_fu_259_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AES_CTR_xcrypt_buffe_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ctx_RoundKey_address0, "(port)ctx_RoundKey_address0");
    sc_trace(mVcdFile, ctx_RoundKey_ce0, "(port)ctx_RoundKey_ce0");
    sc_trace(mVcdFile, ctx_RoundKey_q0, "(port)ctx_RoundKey_q0");
    sc_trace(mVcdFile, ctx_Iv_address0, "(port)ctx_Iv_address0");
    sc_trace(mVcdFile, ctx_Iv_ce0, "(port)ctx_Iv_ce0");
    sc_trace(mVcdFile, ctx_Iv_we0, "(port)ctx_Iv_we0");
    sc_trace(mVcdFile, ctx_Iv_d0, "(port)ctx_Iv_d0");
    sc_trace(mVcdFile, ctx_Iv_q0, "(port)ctx_Iv_q0");
    sc_trace(mVcdFile, buf_r_address0, "(port)buf_r_address0");
    sc_trace(mVcdFile, buf_r_ce0, "(port)buf_r_ce0");
    sc_trace(mVcdFile, buf_r_we0, "(port)buf_r_we0");
    sc_trace(mVcdFile, buf_r_d0, "(port)buf_r_d0");
    sc_trace(mVcdFile, buf_r_q0, "(port)buf_r_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_9_fu_274_p2, "i_9_fu_274_p2");
    sc_trace(mVcdFile, i_9_reg_516, "i_9_reg_516");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln575_fu_280_p2, "icmp_ln575_fu_280_p2");
    sc_trace(mVcdFile, icmp_ln575_reg_521, "icmp_ln575_reg_521");
    sc_trace(mVcdFile, icmp_ln574_fu_268_p2, "icmp_ln574_fu_268_p2");
    sc_trace(mVcdFile, i_fu_292_p2, "i_fu_292_p2");
    sc_trace(mVcdFile, i_reg_528, "i_reg_528");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln55_fu_298_p1, "zext_ln55_fu_298_p1");
    sc_trace(mVcdFile, zext_ln55_reg_533, "zext_ln55_reg_533");
    sc_trace(mVcdFile, icmp_ln54_fu_286_p2, "icmp_ln54_fu_286_p2");
    sc_trace(mVcdFile, zext_ln483_fu_311_p1, "zext_ln483_fu_311_p1");
    sc_trace(mVcdFile, zext_ln483_reg_543, "zext_ln483_reg_543");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_7_fu_321_p2, "i_7_fu_321_p2");
    sc_trace(mVcdFile, i_7_reg_551, "i_7_reg_551");
    sc_trace(mVcdFile, shl_ln_fu_331_p3, "shl_ln_fu_331_p3");
    sc_trace(mVcdFile, shl_ln_reg_556, "shl_ln_reg_556");
    sc_trace(mVcdFile, icmp_ln483_fu_315_p2, "icmp_ln483_fu_315_p2");
    sc_trace(mVcdFile, x_addr_reg_561, "x_addr_reg_561");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, k_fu_363_p2, "k_fu_363_p2");
    sc_trace(mVcdFile, k_reg_569, "k_reg_569");
    sc_trace(mVcdFile, icmp_ln484_fu_357_p2, "icmp_ln484_fu_357_p2");
    sc_trace(mVcdFile, zext_ln491_fu_387_p1, "zext_ln491_fu_387_p1");
    sc_trace(mVcdFile, zext_ln491_reg_579, "zext_ln491_reg_579");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, i_8_fu_397_p2, "i_8_fu_397_p2");
    sc_trace(mVcdFile, i_8_reg_587, "i_8_reg_587");
    sc_trace(mVcdFile, shl_ln1_fu_407_p3, "shl_ln1_fu_407_p3");
    sc_trace(mVcdFile, shl_ln1_reg_592, "shl_ln1_reg_592");
    sc_trace(mVcdFile, icmp_ln491_fu_391_p2, "icmp_ln491_fu_391_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, k_1_fu_439_p2, "k_1_fu_439_p2");
    sc_trace(mVcdFile, k_1_reg_605, "k_1_reg_605");
    sc_trace(mVcdFile, add_ln493_fu_445_p2, "add_ln493_fu_445_p2");
    sc_trace(mVcdFile, add_ln493_reg_610, "add_ln493_reg_610");
    sc_trace(mVcdFile, icmp_ln492_fu_433_p2, "icmp_ln492_fu_433_p2");
    sc_trace(mVcdFile, tmp_9_fu_458_p3, "tmp_9_fu_458_p3");
    sc_trace(mVcdFile, tmp_9_reg_615, "tmp_9_reg_615");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ctx_Iv_addr_1_reg_619, "ctx_Iv_addr_1_reg_619");
    sc_trace(mVcdFile, bi_fu_477_p2, "bi_fu_477_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, icmp_ln587_fu_471_p2, "icmp_ln587_fu_471_p2");
    sc_trace(mVcdFile, buf_addr_reg_632, "buf_addr_reg_632");
    sc_trace(mVcdFile, bi_3_fu_500_p2, "bi_3_fu_500_p2");
    sc_trace(mVcdFile, bi_3_reg_642, "bi_3_reg_642");
    sc_trace(mVcdFile, buffer_address0, "buffer_address0");
    sc_trace(mVcdFile, buffer_ce0, "buffer_ce0");
    sc_trace(mVcdFile, buffer_we0, "buffer_we0");
    sc_trace(mVcdFile, buffer_d0, "buffer_d0");
    sc_trace(mVcdFile, buffer_q0, "buffer_q0");
    sc_trace(mVcdFile, x_address0, "x_address0");
    sc_trace(mVcdFile, x_ce0, "x_ce0");
    sc_trace(mVcdFile, x_we0, "x_we0");
    sc_trace(mVcdFile, x_d0, "x_d0");
    sc_trace(mVcdFile, x_q0, "x_q0");
    sc_trace(mVcdFile, x_ce1, "x_ce1");
    sc_trace(mVcdFile, x_we1, "x_we1");
    sc_trace(mVcdFile, x_q1, "x_q1");
    sc_trace(mVcdFile, grp_Cipher_fu_259_ap_start, "grp_Cipher_fu_259_ap_start");
    sc_trace(mVcdFile, grp_Cipher_fu_259_ap_done, "grp_Cipher_fu_259_ap_done");
    sc_trace(mVcdFile, grp_Cipher_fu_259_ap_idle, "grp_Cipher_fu_259_ap_idle");
    sc_trace(mVcdFile, grp_Cipher_fu_259_ap_ready, "grp_Cipher_fu_259_ap_ready");
    sc_trace(mVcdFile, grp_Cipher_fu_259_state_address0, "grp_Cipher_fu_259_state_address0");
    sc_trace(mVcdFile, grp_Cipher_fu_259_state_ce0, "grp_Cipher_fu_259_state_ce0");
    sc_trace(mVcdFile, grp_Cipher_fu_259_state_we0, "grp_Cipher_fu_259_state_we0");
    sc_trace(mVcdFile, grp_Cipher_fu_259_state_d0, "grp_Cipher_fu_259_state_d0");
    sc_trace(mVcdFile, grp_Cipher_fu_259_state_address1, "grp_Cipher_fu_259_state_address1");
    sc_trace(mVcdFile, grp_Cipher_fu_259_state_ce1, "grp_Cipher_fu_259_state_ce1");
    sc_trace(mVcdFile, grp_Cipher_fu_259_state_we1, "grp_Cipher_fu_259_state_we1");
    sc_trace(mVcdFile, grp_Cipher_fu_259_state_d1, "grp_Cipher_fu_259_state_d1");
    sc_trace(mVcdFile, grp_Cipher_fu_259_RoundKey_address0, "grp_Cipher_fu_259_RoundKey_address0");
    sc_trace(mVcdFile, grp_Cipher_fu_259_RoundKey_ce0, "grp_Cipher_fu_259_RoundKey_ce0");
    sc_trace(mVcdFile, i_0_reg_157, "i_0_reg_157");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, bi_0_reg_169, "bi_0_reg_169");
    sc_trace(mVcdFile, i_0_i_reg_181, "i_0_i_reg_181");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_0_i2_reg_192, "i_0_i2_reg_192");
    sc_trace(mVcdFile, k_0_i_reg_203, "k_0_i_reg_203");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_0_i3_reg_214, "i_0_i3_reg_214");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, k_0_i5_reg_225, "k_0_i5_reg_225");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, bi_1_reg_236, "bi_1_reg_236");
    sc_trace(mVcdFile, ap_phi_mux_bi_2_phi_fu_251_p4, "ap_phi_mux_bi_2_phi_fu_251_p4");
    sc_trace(mVcdFile, bi_2_reg_248, "bi_2_reg_248");
    sc_trace(mVcdFile, grp_Cipher_fu_259_ap_start_reg, "grp_Cipher_fu_259_ap_start_reg");
    sc_trace(mVcdFile, zext_ln485_2_fu_352_p1, "zext_ln485_2_fu_352_p1");
    sc_trace(mVcdFile, zext_ln485_fu_374_p1, "zext_ln485_fu_374_p1");
    sc_trace(mVcdFile, zext_ln493_2_fu_428_p1, "zext_ln493_2_fu_428_p1");
    sc_trace(mVcdFile, zext_ln493_fu_450_p1, "zext_ln493_fu_450_p1");
    sc_trace(mVcdFile, zext_ln587_fu_466_p1, "zext_ln587_fu_466_p1");
    sc_trace(mVcdFile, zext_ln597_fu_490_p1, "zext_ln597_fu_490_p1");
    sc_trace(mVcdFile, sext_ln597_fu_495_p1, "sext_ln597_fu_495_p1");
    sc_trace(mVcdFile, add_ln591_fu_483_p2, "add_ln591_fu_483_p2");
    sc_trace(mVcdFile, tmp_fu_303_p3, "tmp_fu_303_p3");
    sc_trace(mVcdFile, trunc_ln485_fu_327_p1, "trunc_ln485_fu_327_p1");
    sc_trace(mVcdFile, zext_ln485_1_fu_343_p1, "zext_ln485_1_fu_343_p1");
    sc_trace(mVcdFile, add_ln485_1_fu_347_p2, "add_ln485_1_fu_347_p2");
    sc_trace(mVcdFile, zext_ln484_fu_339_p1, "zext_ln484_fu_339_p1");
    sc_trace(mVcdFile, add_ln485_fu_369_p2, "add_ln485_fu_369_p2");
    sc_trace(mVcdFile, tmp_s_fu_379_p3, "tmp_s_fu_379_p3");
    sc_trace(mVcdFile, trunc_ln493_fu_403_p1, "trunc_ln493_fu_403_p1");
    sc_trace(mVcdFile, zext_ln493_1_fu_419_p1, "zext_ln493_1_fu_419_p1");
    sc_trace(mVcdFile, add_ln493_1_fu_423_p2, "add_ln493_1_fu_423_p2");
    sc_trace(mVcdFile, zext_ln492_fu_415_p1, "zext_ln492_fu_415_p1");
    sc_trace(mVcdFile, sext_ln585_fu_454_p1, "sext_ln585_fu_454_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_456, "ap_condition_456");
#endif

    }
}

AES_CTR_xcrypt_buffe::~AES_CTR_xcrypt_buffe() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete buffer_U;
    delete x_U;
    delete grp_Cipher_fu_259;
}

void AES_CTR_xcrypt_buffe::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        bi_0_reg_169 = bi_3_reg_642.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bi_0_reg_169 = ap_const_lv32_10;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln491_fu_391_p2.read(), ap_const_lv1_1))) {
        bi_1_reg_236 = ap_const_lv5_F;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_615.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln587_fu_471_p2.read()))) {
        bi_1_reg_236 = bi_fu_477_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln574_fu_268_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(icmp_ln575_fu_280_p2.read(), ap_const_lv1_0))) {
        bi_2_reg_248 = bi_0_reg_169.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                ((esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln587_fu_471_p2.read())) || 
                 (esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
                  esl_seteq<1,1,1>(tmp_9_reg_615.read(), ap_const_lv1_1))))) {
        bi_2_reg_248 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Cipher_fu_259_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
             esl_seteq<1,1,1>(icmp_ln483_fu_315_p2.read(), ap_const_lv1_1))) {
            grp_Cipher_fu_259_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Cipher_fu_259_ap_ready.read())) {
            grp_Cipher_fu_259_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln54_fu_286_p2.read(), ap_const_lv1_1))) {
        i_0_i2_reg_192 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln484_fu_357_p2.read(), ap_const_lv1_1))) {
        i_0_i2_reg_192 = i_7_reg_551.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(icmp_ln492_fu_433_p2.read(), ap_const_lv1_1))) {
        i_0_i3_reg_214 = i_8_reg_587.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(grp_Cipher_fu_259_ap_done.read(), ap_const_logic_1))) {
        i_0_i3_reg_214 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln574_fu_268_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(icmp_ln575_fu_280_p2.read(), ap_const_lv1_1))) {
        i_0_i_reg_181 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_0_i_reg_181 = i_reg_528.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        i_0_reg_157 = i_9_reg_516.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_157 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln491_fu_391_p2.read()))) {
        k_0_i5_reg_225 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        k_0_i5_reg_225 = k_1_reg_605.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln483_fu_315_p2.read()))) {
        k_0_i_reg_203 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        k_0_i_reg_203 = k_reg_569.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln492_fu_433_p2.read()))) {
        add_ln493_reg_610 = add_ln493_fu_445_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln587_fu_471_p2.read()) || 
   esl_seteq<1,1,1>(tmp_9_reg_615.read(), ap_const_lv1_1)) || 
  esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_0)))) {
        bi_3_reg_642 = bi_3_fu_500_p2.read();
        buf_addr_reg_632 =  (sc_lv<4>) (zext_ln597_fu_490_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_458_p3.read()))) {
        ctx_Iv_addr_1_reg_619 =  (sc_lv<4>) (zext_ln587_fu_466_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_7_reg_551 = i_7_fu_321_p2.read();
        zext_ln483_reg_543 = zext_ln483_fu_311_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_8_reg_587 = i_8_fu_397_p2.read();
        zext_ln491_reg_579 = zext_ln491_fu_387_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_9_reg_516 = i_9_fu_274_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_528 = i_fu_292_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln574_fu_268_p2.read(), ap_const_lv1_0))) {
        icmp_ln575_reg_521 = icmp_ln575_fu_280_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        k_1_reg_605 = k_1_fu_439_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        k_reg_569 = k_fu_363_p2.read();
        x_addr_reg_561 =  (sc_lv<4>) (zext_ln485_2_fu_352_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln491_fu_391_p2.read()))) {
        shl_ln1_reg_592 = shl_ln1_fu_407_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln483_fu_315_p2.read()))) {
        shl_ln_reg_556 = shl_ln_fu_331_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_9_reg_615 = bi_1_reg_236.read().range(4, 4);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln54_fu_286_p2.read()))) {
        zext_ln55_reg_533 = zext_ln55_fu_298_p1.read();
    }
}

void AES_CTR_xcrypt_buffe::thread_add_ln485_1_fu_347_p2() {
    add_ln485_1_fu_347_p2 = (!zext_ln483_reg_543.read().is_01() || !zext_ln485_1_fu_343_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln483_reg_543.read()) + sc_biguint<6>(zext_ln485_1_fu_343_p1.read()));
}

void AES_CTR_xcrypt_buffe::thread_add_ln485_fu_369_p2() {
    add_ln485_fu_369_p2 = (!zext_ln484_fu_339_p1.read().is_01() || !shl_ln_reg_556.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln484_fu_339_p1.read()) + sc_biguint<4>(shl_ln_reg_556.read()));
}

void AES_CTR_xcrypt_buffe::thread_add_ln493_1_fu_423_p2() {
    add_ln493_1_fu_423_p2 = (!zext_ln491_reg_579.read().is_01() || !zext_ln493_1_fu_419_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln491_reg_579.read()) + sc_biguint<6>(zext_ln493_1_fu_419_p1.read()));
}

void AES_CTR_xcrypt_buffe::thread_add_ln493_fu_445_p2() {
    add_ln493_fu_445_p2 = (!zext_ln492_fu_415_p1.read().is_01() || !shl_ln1_reg_592.read().is_01())? sc_lv<4>(): (sc_biguint<4>(zext_ln492_fu_415_p1.read()) + sc_biguint<4>(shl_ln1_reg_592.read()));
}

void AES_CTR_xcrypt_buffe::thread_add_ln591_fu_483_p2() {
    add_ln591_fu_483_p2 = (!ctx_Iv_q0.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ctx_Iv_q0.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void AES_CTR_xcrypt_buffe::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void AES_CTR_xcrypt_buffe::thread_ap_condition_456() {
    ap_condition_456 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_615.read()));
}

void AES_CTR_xcrypt_buffe::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln574_fu_268_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_ap_phi_mux_bi_2_phi_fu_251_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         ((esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln587_fu_471_p2.read())) || 
          (esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
           esl_seteq<1,1,1>(tmp_9_reg_615.read(), ap_const_lv1_1))))) {
        ap_phi_mux_bi_2_phi_fu_251_p4 = ap_const_lv32_0;
    } else {
        ap_phi_mux_bi_2_phi_fu_251_p4 = bi_2_reg_248.read();
    }
}

void AES_CTR_xcrypt_buffe::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln574_fu_268_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_bi_3_fu_500_p2() {
    bi_3_fu_500_p2 = (!ap_phi_mux_bi_2_phi_fu_251_p4.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(ap_phi_mux_bi_2_phi_fu_251_p4.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void AES_CTR_xcrypt_buffe::thread_bi_fu_477_p2() {
    bi_fu_477_p2 = (!bi_1_reg_236.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<5>(): (sc_bigint<5>(bi_1_reg_236.read()) + sc_bigint<5>(ap_const_lv5_1F));
}

void AES_CTR_xcrypt_buffe::thread_buf_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        buf_r_address0 = buf_addr_reg_632.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        buf_r_address0 =  (sc_lv<4>) (zext_ln597_fu_490_p1.read());
    } else {
        buf_r_address0 = "XXXX";
    }
}

void AES_CTR_xcrypt_buffe::thread_buf_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        buf_r_ce0 = ap_const_logic_1;
    } else {
        buf_r_ce0 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_buf_r_d0() {
    buf_r_d0 = (buffer_q0.read() ^ buf_r_q0.read());
}

void AES_CTR_xcrypt_buffe::thread_buf_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        buf_r_we0 = ap_const_logic_1;
    } else {
        buf_r_we0 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_buffer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        buffer_address0 =  (sc_lv<4>) (sext_ln597_fu_495_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        buffer_address0 =  (sc_lv<4>) (zext_ln493_fu_450_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        buffer_address0 =  (sc_lv<4>) (zext_ln485_fu_374_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer_address0 =  (sc_lv<4>) (zext_ln55_reg_533.read());
    } else {
        buffer_address0 = "XXXX";
    }
}

void AES_CTR_xcrypt_buffe::thread_buffer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        buffer_ce0 = ap_const_logic_1;
    } else {
        buffer_ce0 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_buffer_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        buffer_d0 = x_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buffer_d0 = ctx_Iv_q0.read();
    } else {
        buffer_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void AES_CTR_xcrypt_buffe::thread_buffer_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        buffer_we0 = ap_const_logic_1;
    } else {
        buffer_we0 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_ctx_Iv_address0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_615.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln587_fu_471_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_615.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln587_fu_471_p2.read())))) {
        ctx_Iv_address0 = ctx_Iv_addr_1_reg_619.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ctx_Iv_address0 =  (sc_lv<4>) (zext_ln587_fu_466_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ctx_Iv_address0 =  (sc_lv<4>) (zext_ln55_fu_298_p1.read());
    } else {
        ctx_Iv_address0 = "XXXX";
    }
}

void AES_CTR_xcrypt_buffe::thread_ctx_Iv_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_615.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln587_fu_471_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_615.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln587_fu_471_p2.read())))) {
        ctx_Iv_ce0 = ap_const_logic_1;
    } else {
        ctx_Iv_ce0 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_ctx_Iv_d0() {
    if (esl_seteq<1,1,1>(ap_condition_456.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln587_fu_471_p2.read())) {
            ctx_Iv_d0 = add_ln591_fu_483_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln587_fu_471_p2.read())) {
            ctx_Iv_d0 = ap_const_lv8_0;
        } else {
            ctx_Iv_d0 =  (sc_lv<8>) ("XXXXXXXX");
        }
    } else {
        ctx_Iv_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void AES_CTR_xcrypt_buffe::thread_ctx_Iv_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_615.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln587_fu_471_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_615.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln587_fu_471_p2.read())))) {
        ctx_Iv_we0 = ap_const_logic_1;
    } else {
        ctx_Iv_we0 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_ctx_RoundKey_address0() {
    ctx_RoundKey_address0 = grp_Cipher_fu_259_RoundKey_address0.read();
}

void AES_CTR_xcrypt_buffe::thread_ctx_RoundKey_ce0() {
    ctx_RoundKey_ce0 = grp_Cipher_fu_259_RoundKey_ce0.read();
}

void AES_CTR_xcrypt_buffe::thread_grp_Cipher_fu_259_ap_start() {
    grp_Cipher_fu_259_ap_start = grp_Cipher_fu_259_ap_start_reg.read();
}

void AES_CTR_xcrypt_buffe::thread_i_7_fu_321_p2() {
    i_7_fu_321_p2 = (!i_0_i2_reg_192.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_i2_reg_192.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AES_CTR_xcrypt_buffe::thread_i_8_fu_397_p2() {
    i_8_fu_397_p2 = (!i_0_i3_reg_214.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_i3_reg_214.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AES_CTR_xcrypt_buffe::thread_i_9_fu_274_p2() {
    i_9_fu_274_p2 = (!i_0_reg_157.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_157.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void AES_CTR_xcrypt_buffe::thread_i_fu_292_p2() {
    i_fu_292_p2 = (!i_0_i_reg_181.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_i_reg_181.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void AES_CTR_xcrypt_buffe::thread_icmp_ln483_fu_315_p2() {
    icmp_ln483_fu_315_p2 = (!i_0_i2_reg_192.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i2_reg_192.read() == ap_const_lv3_4);
}

void AES_CTR_xcrypt_buffe::thread_icmp_ln484_fu_357_p2() {
    icmp_ln484_fu_357_p2 = (!k_0_i_reg_203.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_0_i_reg_203.read() == ap_const_lv3_4);
}

void AES_CTR_xcrypt_buffe::thread_icmp_ln491_fu_391_p2() {
    icmp_ln491_fu_391_p2 = (!i_0_i3_reg_214.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i3_reg_214.read() == ap_const_lv3_4);
}

void AES_CTR_xcrypt_buffe::thread_icmp_ln492_fu_433_p2() {
    icmp_ln492_fu_433_p2 = (!k_0_i5_reg_225.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(k_0_i5_reg_225.read() == ap_const_lv3_4);
}

void AES_CTR_xcrypt_buffe::thread_icmp_ln54_fu_286_p2() {
    icmp_ln54_fu_286_p2 = (!i_0_i_reg_181.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_181.read() == ap_const_lv5_10);
}

void AES_CTR_xcrypt_buffe::thread_icmp_ln574_fu_268_p2() {
    icmp_ln574_fu_268_p2 = (!i_0_reg_157.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_157.read() == ap_const_lv5_10);
}

void AES_CTR_xcrypt_buffe::thread_icmp_ln575_fu_280_p2() {
    icmp_ln575_fu_280_p2 = (!bi_0_reg_169.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(bi_0_reg_169.read() == ap_const_lv32_10);
}

void AES_CTR_xcrypt_buffe::thread_icmp_ln587_fu_471_p2() {
    icmp_ln587_fu_471_p2 = (!ctx_Iv_q0.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(ctx_Iv_q0.read() == ap_const_lv8_FF);
}

void AES_CTR_xcrypt_buffe::thread_k_1_fu_439_p2() {
    k_1_fu_439_p2 = (!k_0_i5_reg_225.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_i5_reg_225.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AES_CTR_xcrypt_buffe::thread_k_fu_363_p2() {
    k_fu_363_p2 = (!k_0_i_reg_203.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(k_0_i_reg_203.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void AES_CTR_xcrypt_buffe::thread_sext_ln585_fu_454_p1() {
    sext_ln585_fu_454_p1 = esl_sext<32,5>(bi_1_reg_236.read());
}

void AES_CTR_xcrypt_buffe::thread_sext_ln597_fu_495_p1() {
    sext_ln597_fu_495_p1 = esl_sext<64,32>(ap_phi_mux_bi_2_phi_fu_251_p4.read());
}

void AES_CTR_xcrypt_buffe::thread_shl_ln1_fu_407_p3() {
    shl_ln1_fu_407_p3 = esl_concat<2,2>(trunc_ln493_fu_403_p1.read(), ap_const_lv2_0);
}

void AES_CTR_xcrypt_buffe::thread_shl_ln_fu_331_p3() {
    shl_ln_fu_331_p3 = esl_concat<2,2>(trunc_ln485_fu_327_p1.read(), ap_const_lv2_0);
}

void AES_CTR_xcrypt_buffe::thread_tmp_9_fu_458_p3() {
    tmp_9_fu_458_p3 = bi_1_reg_236.read().range(4, 4);
}

void AES_CTR_xcrypt_buffe::thread_tmp_fu_303_p3() {
    tmp_fu_303_p3 = esl_concat<3,2>(i_0_i2_reg_192.read(), ap_const_lv2_0);
}

void AES_CTR_xcrypt_buffe::thread_tmp_s_fu_379_p3() {
    tmp_s_fu_379_p3 = esl_concat<3,2>(i_0_i3_reg_214.read(), ap_const_lv2_0);
}

void AES_CTR_xcrypt_buffe::thread_trunc_ln485_fu_327_p1() {
    trunc_ln485_fu_327_p1 = i_0_i2_reg_192.read().range(2-1, 0);
}

void AES_CTR_xcrypt_buffe::thread_trunc_ln493_fu_403_p1() {
    trunc_ln493_fu_403_p1 = i_0_i3_reg_214.read().range(2-1, 0);
}

void AES_CTR_xcrypt_buffe::thread_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        x_address0 =  (sc_lv<4>) (zext_ln493_2_fu_428_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_address0 = x_addr_reg_561.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_address0 = grp_Cipher_fu_259_state_address0.read();
    } else {
        x_address0 = "XXXX";
    }
}

void AES_CTR_xcrypt_buffe::thread_x_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        x_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_ce0 = grp_Cipher_fu_259_state_ce0.read();
    } else {
        x_ce0 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_x_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_ce1 = grp_Cipher_fu_259_state_ce1.read();
    } else {
        x_ce1 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_x_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_d0 = buffer_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_d0 = grp_Cipher_fu_259_state_d0.read();
    } else {
        x_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void AES_CTR_xcrypt_buffe::thread_x_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_we0 = grp_Cipher_fu_259_state_we0.read();
    } else {
        x_we0 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_x_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_we1 = grp_Cipher_fu_259_state_we1.read();
    } else {
        x_we1 = ap_const_logic_0;
    }
}

void AES_CTR_xcrypt_buffe::thread_zext_ln483_fu_311_p1() {
    zext_ln483_fu_311_p1 = esl_zext<6,5>(tmp_fu_303_p3.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln484_fu_339_p1() {
    zext_ln484_fu_339_p1 = esl_zext<4,3>(k_0_i_reg_203.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln485_1_fu_343_p1() {
    zext_ln485_1_fu_343_p1 = esl_zext<6,3>(k_0_i_reg_203.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln485_2_fu_352_p1() {
    zext_ln485_2_fu_352_p1 = esl_zext<64,6>(add_ln485_1_fu_347_p2.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln485_fu_374_p1() {
    zext_ln485_fu_374_p1 = esl_zext<64,4>(add_ln485_fu_369_p2.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln491_fu_387_p1() {
    zext_ln491_fu_387_p1 = esl_zext<6,5>(tmp_s_fu_379_p3.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln492_fu_415_p1() {
    zext_ln492_fu_415_p1 = esl_zext<4,3>(k_0_i5_reg_225.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln493_1_fu_419_p1() {
    zext_ln493_1_fu_419_p1 = esl_zext<6,3>(k_0_i5_reg_225.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln493_2_fu_428_p1() {
    zext_ln493_2_fu_428_p1 = esl_zext<64,6>(add_ln493_1_fu_423_p2.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln493_fu_450_p1() {
    zext_ln493_fu_450_p1 = esl_zext<64,4>(add_ln493_reg_610.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln55_fu_298_p1() {
    zext_ln55_fu_298_p1 = esl_zext<64,5>(i_0_i_reg_181.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln587_fu_466_p1() {
    zext_ln587_fu_466_p1 = esl_zext<64,32>(sext_ln585_fu_454_p1.read());
}

void AES_CTR_xcrypt_buffe::thread_zext_ln597_fu_490_p1() {
    zext_ln597_fu_490_p1 = esl_zext<64,5>(i_0_reg_157.read());
}

void AES_CTR_xcrypt_buffe::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln574_fu_268_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln574_fu_268_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(icmp_ln575_fu_280_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln54_fu_286_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln483_fu_315_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln484_fu_357_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_Cipher_fu_259_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(icmp_ln491_fu_391_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(icmp_ln492_fu_433_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln587_fu_471_p2.read()) || 
   esl_seteq<1,1,1>(tmp_9_reg_615.read(), ap_const_lv1_1)) || 
  esl_seteq<1,1,1>(icmp_ln575_reg_521.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
            break;
    }
}

}

