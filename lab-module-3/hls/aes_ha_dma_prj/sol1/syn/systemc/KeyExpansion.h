// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > RoundKey_address0;
    sc_out< sc_logic > RoundKey_ce0;
    sc_out< sc_logic > RoundKey_we0;
    sc_out< sc_lv<8> > RoundKey_d0;
    sc_in< sc_lv<8> > RoundKey_q0;
    sc_out< sc_lv<8> > RoundKey_address1;
    sc_out< sc_logic > RoundKey_ce1;
    sc_out< sc_logic > RoundKey_we1;
    sc_out< sc_lv<8> > RoundKey_d1;
    sc_in< sc_lv<8> > RoundKey_q1;
    sc_out< sc_lv<4> > Key_address0;
    sc_out< sc_logic > Key_ce0;
    sc_in< sc_lv<8> > Key_q0;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox* sbox_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<12> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<4> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<3> > i_fu_337_p2;
    sc_signal< sc_lv<3> > i_reg_624;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > shl_ln_fu_347_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_629;
    sc_signal< sc_lv<1> > icmp_ln190_fu_331_p2;
    sc_signal< sc_lv<64> > zext_ln191_fu_355_p1;
    sc_signal< sc_lv<64> > zext_ln191_reg_636;
    sc_signal< sc_lv<64> > zext_ln192_fu_365_p1;
    sc_signal< sc_lv<64> > zext_ln192_reg_646;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln193_fu_375_p1;
    sc_signal< sc_lv<64> > zext_ln193_reg_656;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > zext_ln194_fu_385_p1;
    sc_signal< sc_lv<64> > zext_ln194_reg_666;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<8> > j_fu_396_p3;
    sc_signal< sc_lv<8> > j_reg_679;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln198_fu_390_p2;
    sc_signal< sc_lv<1> > icmp_ln207_fu_430_p2;
    sc_signal< sc_lv<1> > icmp_ln207_reg_703;
    sc_signal< sc_lv<4> > lshr_ln_reg_711;
    sc_signal< sc_lv<6> > i_5_fu_446_p2;
    sc_signal< sc_lv<6> > i_5_reg_716;
    sc_signal< sc_lv<8> > tempa_0_3_reg_721;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<8> > tempa_1_reg_727;
    sc_signal< sc_lv<8> > tempa_2_reg_743;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > tempa_3_reg_748;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<8> > xor_ln246_fu_531_p2;
    sc_signal< sc_lv<8> > xor_ln246_reg_789;
    sc_signal< sc_lv<8> > xor_ln247_fu_537_p2;
    sc_signal< sc_lv<8> > xor_ln247_reg_794;
    sc_signal< sc_lv<8> > xor_ln248_fu_589_p2;
    sc_signal< sc_lv<8> > xor_ln248_reg_809;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<8> > xor_ln249_fu_595_p2;
    sc_signal< sc_lv<8> > xor_ln249_reg_814;
    sc_signal< sc_lv<3> > i_0_reg_309;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<6> > i_1_reg_320;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<64> > zext_ln201_fu_410_p1;
    sc_signal< sc_lv<64> > zext_ln202_fu_421_p1;
    sc_signal< sc_lv<64> > zext_ln203_fu_457_p1;
    sc_signal< sc_lv<64> > zext_ln204_fu_467_p1;
    sc_signal< sc_lv<64> > zext_ln225_fu_472_p1;
    sc_signal< sc_lv<64> > zext_ln226_fu_476_p1;
    sc_signal< sc_lv<64> > zext_ln231_fu_481_p1;
    sc_signal< sc_lv<64> > zext_ln246_fu_490_p1;
    sc_signal< sc_lv<64> > zext_ln247_fu_500_p1;
    sc_signal< sc_lv<64> > zext_ln227_fu_505_p1;
    sc_signal< sc_lv<64> > zext_ln228_fu_509_p1;
    sc_signal< sc_lv<64> > zext_ln248_fu_548_p1;
    sc_signal< sc_lv<64> > zext_ln249_fu_558_p1;
    sc_signal< sc_lv<64> > zext_ln246_1_fu_575_p1;
    sc_signal< sc_lv<64> > zext_ln247_1_fu_584_p1;
    sc_signal< sc_lv<64> > zext_ln248_1_fu_606_p1;
    sc_signal< sc_lv<64> > zext_ln249_1_fu_616_p1;
    sc_signal< sc_lv<2> > trunc_ln191_fu_343_p1;
    sc_signal< sc_lv<4> > or_ln192_fu_360_p2;
    sc_signal< sc_lv<4> > or_ln193_fu_370_p2;
    sc_signal< sc_lv<4> > or_ln194_fu_380_p2;
    sc_signal< sc_lv<8> > add_ln201_fu_404_p2;
    sc_signal< sc_lv<8> > add_ln202_fu_415_p2;
    sc_signal< sc_lv<2> > trunc_ln198_fu_426_p1;
    sc_signal< sc_lv<8> > add_ln203_fu_452_p2;
    sc_signal< sc_lv<8> > add_ln204_fu_462_p2;
    sc_signal< sc_lv<8> > add_ln246_fu_485_p2;
    sc_signal< sc_lv<8> > add_ln247_fu_495_p2;
    sc_signal< sc_lv<8> > tempa_0_fu_513_p2;
    sc_signal< sc_lv<8> > tempa_0_2_fu_525_p3;
    sc_signal< sc_lv<8> > tempa_1_2_fu_519_p3;
    sc_signal< sc_lv<8> > add_ln248_fu_543_p2;
    sc_signal< sc_lv<8> > add_ln249_fu_553_p2;
    sc_signal< sc_lv<8> > or_ln247_fu_579_p2;
    sc_signal< sc_lv<8> > tempa_2_2_fu_569_p3;
    sc_signal< sc_lv<8> > tempa_3_2_fu_563_p3;
    sc_signal< sc_lv<8> > or_ln248_fu_601_p2;
    sc_signal< sc_lv<8> > or_ln249_fu_611_p2;
    sc_signal< sc_lv<12> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<12> ap_ST_fsm_state1;
    static const sc_lv<12> ap_ST_fsm_state2;
    static const sc_lv<12> ap_ST_fsm_state3;
    static const sc_lv<12> ap_ST_fsm_state4;
    static const sc_lv<12> ap_ST_fsm_state5;
    static const sc_lv<12> ap_ST_fsm_state6;
    static const sc_lv<12> ap_ST_fsm_state7;
    static const sc_lv<12> ap_ST_fsm_state8;
    static const sc_lv<12> ap_ST_fsm_state9;
    static const sc_lv<12> ap_ST_fsm_state10;
    static const sc_lv<12> ap_ST_fsm_state11;
    static const sc_lv<12> ap_ST_fsm_state12;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<6> ap_const_lv6_4;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<6> ap_const_lv6_2C;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_F0;
    static const sc_lv<8> ap_const_lv8_F1;
    static const sc_lv<8> ap_const_lv8_F2;
    static const sc_lv<8> ap_const_lv8_F3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Key_address0();
    void thread_Key_ce0();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_RoundKey_d0();
    void thread_RoundKey_d1();
    void thread_RoundKey_we0();
    void thread_RoundKey_we1();
    void thread_add_ln201_fu_404_p2();
    void thread_add_ln202_fu_415_p2();
    void thread_add_ln203_fu_452_p2();
    void thread_add_ln204_fu_462_p2();
    void thread_add_ln246_fu_485_p2();
    void thread_add_ln247_fu_495_p2();
    void thread_add_ln248_fu_543_p2();
    void thread_add_ln249_fu_553_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_5_fu_446_p2();
    void thread_i_fu_337_p2();
    void thread_icmp_ln190_fu_331_p2();
    void thread_icmp_ln198_fu_390_p2();
    void thread_icmp_ln207_fu_430_p2();
    void thread_j_fu_396_p3();
    void thread_or_ln192_fu_360_p2();
    void thread_or_ln193_fu_370_p2();
    void thread_or_ln194_fu_380_p2();
    void thread_or_ln247_fu_579_p2();
    void thread_or_ln248_fu_601_p2();
    void thread_or_ln249_fu_611_p2();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_shl_ln_fu_347_p3();
    void thread_tempa_0_2_fu_525_p3();
    void thread_tempa_0_fu_513_p2();
    void thread_tempa_1_2_fu_519_p3();
    void thread_tempa_2_2_fu_569_p3();
    void thread_tempa_3_2_fu_563_p3();
    void thread_trunc_ln191_fu_343_p1();
    void thread_trunc_ln198_fu_426_p1();
    void thread_xor_ln246_fu_531_p2();
    void thread_xor_ln247_fu_537_p2();
    void thread_xor_ln248_fu_589_p2();
    void thread_xor_ln249_fu_595_p2();
    void thread_zext_ln191_fu_355_p1();
    void thread_zext_ln192_fu_365_p1();
    void thread_zext_ln193_fu_375_p1();
    void thread_zext_ln194_fu_385_p1();
    void thread_zext_ln201_fu_410_p1();
    void thread_zext_ln202_fu_421_p1();
    void thread_zext_ln203_fu_457_p1();
    void thread_zext_ln204_fu_467_p1();
    void thread_zext_ln225_fu_472_p1();
    void thread_zext_ln226_fu_476_p1();
    void thread_zext_ln227_fu_505_p1();
    void thread_zext_ln228_fu_509_p1();
    void thread_zext_ln231_fu_481_p1();
    void thread_zext_ln246_1_fu_575_p1();
    void thread_zext_ln246_fu_490_p1();
    void thread_zext_ln247_1_fu_584_p1();
    void thread_zext_ln247_fu_500_p1();
    void thread_zext_ln248_1_fu_606_p1();
    void thread_zext_ln248_fu_548_p1();
    void thread_zext_ln249_1_fu_616_p1();
    void thread_zext_ln249_fu_558_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
