// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AES_CTR_xcrypt_buffe_HH_
#define _AES_CTR_xcrypt_buffe_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Cipher.h"
#include "AES_CTR_xcrypt_buffe_buffer.h"
#include "AES_CTR_xcrypt_buffe_x.h"

namespace ap_rtl {

struct AES_CTR_xcrypt_buffe : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > ctx_RoundKey_address0;
    sc_out< sc_logic > ctx_RoundKey_ce0;
    sc_in< sc_lv<8> > ctx_RoundKey_q0;
    sc_out< sc_lv<4> > ctx_Iv_address0;
    sc_out< sc_logic > ctx_Iv_ce0;
    sc_out< sc_logic > ctx_Iv_we0;
    sc_out< sc_lv<8> > ctx_Iv_d0;
    sc_in< sc_lv<8> > ctx_Iv_q0;
    sc_out< sc_lv<4> > buf_r_address0;
    sc_out< sc_logic > buf_r_ce0;
    sc_out< sc_logic > buf_r_we0;
    sc_out< sc_lv<8> > buf_r_d0;
    sc_in< sc_lv<8> > buf_r_q0;


    // Module declarations
    AES_CTR_xcrypt_buffe(sc_module_name name);
    SC_HAS_PROCESS(AES_CTR_xcrypt_buffe);

    ~AES_CTR_xcrypt_buffe();

    sc_trace_file* mVcdFile;

    AES_CTR_xcrypt_buffe_buffer* buffer_U;
    AES_CTR_xcrypt_buffe_x* x_U;
    Cipher* grp_Cipher_fu_259;
    sc_signal< sc_lv<14> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > i_8_fu_274_p2;
    sc_signal< sc_lv<5> > i_8_reg_516;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln575_fu_280_p2;
    sc_signal< sc_lv<1> > icmp_ln575_reg_521;
    sc_signal< sc_lv<1> > icmp_ln574_fu_268_p2;
    sc_signal< sc_lv<5> > i_fu_292_p2;
    sc_signal< sc_lv<5> > i_reg_528;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln55_fu_298_p1;
    sc_signal< sc_lv<64> > zext_ln55_reg_533;
    sc_signal< sc_lv<1> > icmp_ln54_fu_286_p2;
    sc_signal< sc_lv<6> > zext_ln483_fu_311_p1;
    sc_signal< sc_lv<6> > zext_ln483_reg_543;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > i_6_fu_321_p2;
    sc_signal< sc_lv<3> > i_6_reg_551;
    sc_signal< sc_lv<4> > shl_ln_fu_331_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_556;
    sc_signal< sc_lv<1> > icmp_ln483_fu_315_p2;
    sc_signal< sc_lv<4> > x_addr_reg_561;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > k_fu_363_p2;
    sc_signal< sc_lv<3> > k_reg_569;
    sc_signal< sc_lv<1> > icmp_ln484_fu_357_p2;
    sc_signal< sc_lv<6> > zext_ln491_fu_387_p1;
    sc_signal< sc_lv<6> > zext_ln491_reg_579;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<3> > i_7_fu_397_p2;
    sc_signal< sc_lv<3> > i_7_reg_587;
    sc_signal< sc_lv<4> > shl_ln1_fu_407_p3;
    sc_signal< sc_lv<4> > shl_ln1_reg_592;
    sc_signal< sc_lv<1> > icmp_ln491_fu_391_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<3> > k_1_fu_439_p2;
    sc_signal< sc_lv<3> > k_1_reg_605;
    sc_signal< sc_lv<4> > add_ln493_fu_445_p2;
    sc_signal< sc_lv<4> > add_ln493_reg_610;
    sc_signal< sc_lv<1> > icmp_ln492_fu_433_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_458_p3;
    sc_signal< sc_lv<1> > tmp_9_reg_615;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<4> > ctx_Iv_addr_1_reg_619;
    sc_signal< sc_lv<5> > bi_fu_477_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<1> > icmp_ln587_fu_471_p2;
    sc_signal< sc_lv<4> > buf_addr_reg_632;
    sc_signal< sc_lv<32> > bi_3_fu_500_p2;
    sc_signal< sc_lv<32> > bi_3_reg_642;
    sc_signal< sc_lv<4> > buffer_address0;
    sc_signal< sc_logic > buffer_ce0;
    sc_signal< sc_logic > buffer_we0;
    sc_signal< sc_lv<8> > buffer_d0;
    sc_signal< sc_lv<8> > buffer_q0;
    sc_signal< sc_lv<4> > x_address0;
    sc_signal< sc_logic > x_ce0;
    sc_signal< sc_logic > x_we0;
    sc_signal< sc_lv<8> > x_d0;
    sc_signal< sc_lv<8> > x_q0;
    sc_signal< sc_logic > x_ce1;
    sc_signal< sc_logic > x_we1;
    sc_signal< sc_lv<8> > x_q1;
    sc_signal< sc_logic > grp_Cipher_fu_259_ap_start;
    sc_signal< sc_logic > grp_Cipher_fu_259_ap_done;
    sc_signal< sc_logic > grp_Cipher_fu_259_ap_idle;
    sc_signal< sc_logic > grp_Cipher_fu_259_ap_ready;
    sc_signal< sc_lv<4> > grp_Cipher_fu_259_state_address0;
    sc_signal< sc_logic > grp_Cipher_fu_259_state_ce0;
    sc_signal< sc_logic > grp_Cipher_fu_259_state_we0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_259_state_d0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_259_state_address1;
    sc_signal< sc_logic > grp_Cipher_fu_259_state_ce1;
    sc_signal< sc_logic > grp_Cipher_fu_259_state_we1;
    sc_signal< sc_lv<8> > grp_Cipher_fu_259_state_d1;
    sc_signal< sc_lv<8> > grp_Cipher_fu_259_RoundKey_address0;
    sc_signal< sc_logic > grp_Cipher_fu_259_RoundKey_ce0;
    sc_signal< sc_lv<5> > i_0_reg_157;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<32> > bi_0_reg_169;
    sc_signal< sc_lv<5> > i_0_i_reg_181;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > i_0_i2_reg_192;
    sc_signal< sc_lv<3> > k_0_i_reg_203;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > i_0_i3_reg_214;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<3> > k_0_i5_reg_225;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<5> > bi_1_reg_236;
    sc_signal< sc_lv<32> > ap_phi_mux_bi_2_phi_fu_251_p4;
    sc_signal< sc_lv<32> > bi_2_reg_248;
    sc_signal< sc_logic > grp_Cipher_fu_259_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln485_2_fu_352_p1;
    sc_signal< sc_lv<64> > zext_ln485_fu_374_p1;
    sc_signal< sc_lv<64> > zext_ln493_2_fu_428_p1;
    sc_signal< sc_lv<64> > zext_ln493_fu_450_p1;
    sc_signal< sc_lv<64> > zext_ln587_fu_466_p1;
    sc_signal< sc_lv<64> > zext_ln597_fu_490_p1;
    sc_signal< sc_lv<64> > sext_ln597_fu_495_p1;
    sc_signal< sc_lv<8> > add_ln591_fu_483_p2;
    sc_signal< sc_lv<5> > tmp_fu_303_p3;
    sc_signal< sc_lv<2> > trunc_ln485_fu_327_p1;
    sc_signal< sc_lv<6> > zext_ln485_1_fu_343_p1;
    sc_signal< sc_lv<6> > add_ln485_1_fu_347_p2;
    sc_signal< sc_lv<4> > zext_ln484_fu_339_p1;
    sc_signal< sc_lv<4> > add_ln485_fu_369_p2;
    sc_signal< sc_lv<5> > tmp_s_fu_379_p3;
    sc_signal< sc_lv<2> > trunc_ln493_fu_403_p1;
    sc_signal< sc_lv<6> > zext_ln493_1_fu_419_p1;
    sc_signal< sc_lv<6> > add_ln493_1_fu_423_p2;
    sc_signal< sc_lv<4> > zext_ln492_fu_415_p1;
    sc_signal< sc_lv<32> > sext_ln585_fu_454_p1;
    sc_signal< sc_lv<14> > ap_NS_fsm;
    sc_signal< bool > ap_condition_456;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<14> ap_ST_fsm_state1;
    static const sc_lv<14> ap_ST_fsm_state2;
    static const sc_lv<14> ap_ST_fsm_state3;
    static const sc_lv<14> ap_ST_fsm_state4;
    static const sc_lv<14> ap_ST_fsm_state5;
    static const sc_lv<14> ap_ST_fsm_state6;
    static const sc_lv<14> ap_ST_fsm_state7;
    static const sc_lv<14> ap_ST_fsm_state8;
    static const sc_lv<14> ap_ST_fsm_state9;
    static const sc_lv<14> ap_ST_fsm_state10;
    static const sc_lv<14> ap_ST_fsm_state11;
    static const sc_lv<14> ap_ST_fsm_state12;
    static const sc_lv<14> ap_ST_fsm_state13;
    static const sc_lv<14> ap_ST_fsm_state14;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<8> ap_const_lv8_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln485_1_fu_347_p2();
    void thread_add_ln485_fu_369_p2();
    void thread_add_ln493_1_fu_423_p2();
    void thread_add_ln493_fu_445_p2();
    void thread_add_ln591_fu_483_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_condition_456();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_bi_2_phi_fu_251_p4();
    void thread_ap_ready();
    void thread_bi_3_fu_500_p2();
    void thread_bi_fu_477_p2();
    void thread_buf_r_address0();
    void thread_buf_r_ce0();
    void thread_buf_r_d0();
    void thread_buf_r_we0();
    void thread_buffer_address0();
    void thread_buffer_ce0();
    void thread_buffer_d0();
    void thread_buffer_we0();
    void thread_ctx_Iv_address0();
    void thread_ctx_Iv_ce0();
    void thread_ctx_Iv_d0();
    void thread_ctx_Iv_we0();
    void thread_ctx_RoundKey_address0();
    void thread_ctx_RoundKey_ce0();
    void thread_grp_Cipher_fu_259_ap_start();
    void thread_i_6_fu_321_p2();
    void thread_i_7_fu_397_p2();
    void thread_i_8_fu_274_p2();
    void thread_i_fu_292_p2();
    void thread_icmp_ln483_fu_315_p2();
    void thread_icmp_ln484_fu_357_p2();
    void thread_icmp_ln491_fu_391_p2();
    void thread_icmp_ln492_fu_433_p2();
    void thread_icmp_ln54_fu_286_p2();
    void thread_icmp_ln574_fu_268_p2();
    void thread_icmp_ln575_fu_280_p2();
    void thread_icmp_ln587_fu_471_p2();
    void thread_k_1_fu_439_p2();
    void thread_k_fu_363_p2();
    void thread_sext_ln585_fu_454_p1();
    void thread_sext_ln597_fu_495_p1();
    void thread_shl_ln1_fu_407_p3();
    void thread_shl_ln_fu_331_p3();
    void thread_tmp_9_fu_458_p3();
    void thread_tmp_fu_303_p3();
    void thread_tmp_s_fu_379_p3();
    void thread_trunc_ln485_fu_327_p1();
    void thread_trunc_ln493_fu_403_p1();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_x_ce1();
    void thread_x_d0();
    void thread_x_we0();
    void thread_x_we1();
    void thread_zext_ln483_fu_311_p1();
    void thread_zext_ln484_fu_339_p1();
    void thread_zext_ln485_1_fu_343_p1();
    void thread_zext_ln485_2_fu_352_p1();
    void thread_zext_ln485_fu_374_p1();
    void thread_zext_ln491_fu_387_p1();
    void thread_zext_ln492_fu_415_p1();
    void thread_zext_ln493_1_fu_419_p1();
    void thread_zext_ln493_2_fu_428_p1();
    void thread_zext_ln493_fu_450_p1();
    void thread_zext_ln55_fu_298_p1();
    void thread_zext_ln587_fu_466_p1();
    void thread_zext_ln597_fu_490_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
