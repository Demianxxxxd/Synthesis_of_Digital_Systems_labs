// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AES_CTR_xcrypt_buffe (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ctx_RoundKey_address0,
        ctx_RoundKey_ce0,
        ctx_RoundKey_q0,
        ctx_Iv_address0,
        ctx_Iv_ce0,
        ctx_Iv_we0,
        ctx_Iv_d0,
        ctx_Iv_q0,
        buf_r_address0,
        buf_r_ce0,
        buf_r_we0,
        buf_r_d0,
        buf_r_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] ctx_RoundKey_address0;
output   ctx_RoundKey_ce0;
input  [7:0] ctx_RoundKey_q0;
output  [3:0] ctx_Iv_address0;
output   ctx_Iv_ce0;
output   ctx_Iv_we0;
output  [7:0] ctx_Iv_d0;
input  [7:0] ctx_Iv_q0;
output  [3:0] buf_r_address0;
output   buf_r_ce0;
output   buf_r_we0;
output  [7:0] buf_r_d0;
input  [7:0] buf_r_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] ctx_Iv_address0;
reg ctx_Iv_ce0;
reg ctx_Iv_we0;
reg[7:0] ctx_Iv_d0;
reg[3:0] buf_r_address0;
reg buf_r_ce0;
reg buf_r_we0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] i_8_fu_274_p2;
reg   [4:0] i_8_reg_516;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln575_fu_280_p2;
reg   [0:0] icmp_ln575_reg_521;
wire   [0:0] icmp_ln574_fu_268_p2;
wire   [4:0] i_fu_292_p2;
reg   [4:0] i_reg_528;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln55_fu_298_p1;
reg   [63:0] zext_ln55_reg_533;
wire   [0:0] icmp_ln54_fu_286_p2;
wire   [5:0] zext_ln483_fu_311_p1;
reg   [5:0] zext_ln483_reg_543;
wire    ap_CS_fsm_state5;
wire   [2:0] i_6_fu_321_p2;
reg   [2:0] i_6_reg_551;
wire   [3:0] shl_ln_fu_331_p3;
reg   [3:0] shl_ln_reg_556;
wire   [0:0] icmp_ln483_fu_315_p2;
reg   [3:0] x_addr_reg_561;
wire    ap_CS_fsm_state6;
wire   [2:0] k_fu_363_p2;
reg   [2:0] k_reg_569;
wire   [0:0] icmp_ln484_fu_357_p2;
wire   [5:0] zext_ln491_fu_387_p1;
reg   [5:0] zext_ln491_reg_579;
wire    ap_CS_fsm_state9;
wire   [2:0] i_7_fu_397_p2;
reg   [2:0] i_7_reg_587;
wire   [3:0] shl_ln1_fu_407_p3;
reg   [3:0] shl_ln1_reg_592;
wire   [0:0] icmp_ln491_fu_391_p2;
wire    ap_CS_fsm_state10;
wire   [2:0] k_1_fu_439_p2;
reg   [2:0] k_1_reg_605;
wire   [3:0] add_ln493_fu_445_p2;
reg   [3:0] add_ln493_reg_610;
wire   [0:0] icmp_ln492_fu_433_p2;
wire   [0:0] tmp_9_fu_458_p3;
reg   [0:0] tmp_9_reg_615;
wire    ap_CS_fsm_state12;
reg   [3:0] ctx_Iv_addr_1_reg_619;
wire   [4:0] bi_fu_477_p2;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln587_fu_471_p2;
reg   [3:0] buf_addr_reg_632;
wire   [31:0] bi_3_fu_500_p2;
reg   [31:0] bi_3_reg_642;
reg   [3:0] buffer_address0;
reg    buffer_ce0;
reg    buffer_we0;
reg   [7:0] buffer_d0;
wire   [7:0] buffer_q0;
reg   [3:0] x_address0;
reg    x_ce0;
reg    x_we0;
reg   [7:0] x_d0;
wire   [7:0] x_q0;
reg    x_ce1;
reg    x_we1;
wire   [7:0] x_q1;
wire    grp_Cipher_fu_259_ap_start;
wire    grp_Cipher_fu_259_ap_done;
wire    grp_Cipher_fu_259_ap_idle;
wire    grp_Cipher_fu_259_ap_ready;
wire   [3:0] grp_Cipher_fu_259_state_address0;
wire    grp_Cipher_fu_259_state_ce0;
wire    grp_Cipher_fu_259_state_we0;
wire   [7:0] grp_Cipher_fu_259_state_d0;
wire   [3:0] grp_Cipher_fu_259_state_address1;
wire    grp_Cipher_fu_259_state_ce1;
wire    grp_Cipher_fu_259_state_we1;
wire   [7:0] grp_Cipher_fu_259_state_d1;
wire   [7:0] grp_Cipher_fu_259_RoundKey_address0;
wire    grp_Cipher_fu_259_RoundKey_ce0;
reg   [4:0] i_0_reg_157;
wire    ap_CS_fsm_state14;
reg   [31:0] bi_0_reg_169;
reg   [4:0] i_0_i_reg_181;
wire    ap_CS_fsm_state4;
reg   [2:0] i_0_i2_reg_192;
reg   [2:0] k_0_i_reg_203;
wire    ap_CS_fsm_state7;
reg   [2:0] i_0_i3_reg_214;
wire    ap_CS_fsm_state8;
reg   [2:0] k_0_i5_reg_225;
wire    ap_CS_fsm_state11;
reg  signed [4:0] bi_1_reg_236;
reg  signed [31:0] ap_phi_mux_bi_2_phi_fu_251_p4;
reg  signed [31:0] bi_2_reg_248;
reg    grp_Cipher_fu_259_ap_start_reg;
wire   [63:0] zext_ln485_2_fu_352_p1;
wire   [63:0] zext_ln485_fu_374_p1;
wire   [63:0] zext_ln493_2_fu_428_p1;
wire   [63:0] zext_ln493_fu_450_p1;
wire   [63:0] zext_ln587_fu_466_p1;
wire   [63:0] zext_ln597_fu_490_p1;
wire  signed [63:0] sext_ln597_fu_495_p1;
wire   [7:0] add_ln591_fu_483_p2;
wire   [4:0] tmp_fu_303_p3;
wire   [1:0] trunc_ln485_fu_327_p1;
wire   [5:0] zext_ln485_1_fu_343_p1;
wire   [5:0] add_ln485_1_fu_347_p2;
wire   [3:0] zext_ln484_fu_339_p1;
wire   [3:0] add_ln485_fu_369_p2;
wire   [4:0] tmp_s_fu_379_p3;
wire   [1:0] trunc_ln493_fu_403_p1;
wire   [5:0] zext_ln493_1_fu_419_p1;
wire   [5:0] add_ln493_1_fu_423_p2;
wire   [3:0] zext_ln492_fu_415_p1;
wire  signed [31:0] sext_ln585_fu_454_p1;
reg   [13:0] ap_NS_fsm;
reg    ap_condition_456;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_Cipher_fu_259_ap_start_reg = 1'b0;
end

AES_CTR_xcrypt_buffe_buffer #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_address0),
    .ce0(buffer_ce0),
    .we0(buffer_we0),
    .d0(buffer_d0),
    .q0(buffer_q0)
);

AES_CTR_xcrypt_buffe_x #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
x_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_address0),
    .ce0(x_ce0),
    .we0(x_we0),
    .d0(x_d0),
    .q0(x_q0),
    .address1(grp_Cipher_fu_259_state_address1),
    .ce1(x_ce1),
    .we1(x_we1),
    .d1(grp_Cipher_fu_259_state_d1),
    .q1(x_q1)
);

Cipher grp_Cipher_fu_259(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Cipher_fu_259_ap_start),
    .ap_done(grp_Cipher_fu_259_ap_done),
    .ap_idle(grp_Cipher_fu_259_ap_idle),
    .ap_ready(grp_Cipher_fu_259_ap_ready),
    .state_address0(grp_Cipher_fu_259_state_address0),
    .state_ce0(grp_Cipher_fu_259_state_ce0),
    .state_we0(grp_Cipher_fu_259_state_we0),
    .state_d0(grp_Cipher_fu_259_state_d0),
    .state_q0(x_q0),
    .state_address1(grp_Cipher_fu_259_state_address1),
    .state_ce1(grp_Cipher_fu_259_state_ce1),
    .state_we1(grp_Cipher_fu_259_state_we1),
    .state_d1(grp_Cipher_fu_259_state_d1),
    .state_q1(x_q1),
    .RoundKey_address0(grp_Cipher_fu_259_RoundKey_address0),
    .RoundKey_ce0(grp_Cipher_fu_259_RoundKey_ce0),
    .RoundKey_q0(ctx_RoundKey_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Cipher_fu_259_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln483_fu_315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            grp_Cipher_fu_259_ap_start_reg <= 1'b1;
        end else if ((grp_Cipher_fu_259_ap_ready == 1'b1)) begin
            grp_Cipher_fu_259_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        bi_0_reg_169 <= bi_3_reg_642;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bi_0_reg_169 <= 32'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln491_fu_391_p2 == 1'd1))) begin
        bi_1_reg_236 <= 5'd15;
    end else if (((tmp_9_reg_615 == 1'd0) & (icmp_ln575_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln587_fu_471_p2 == 1'd1))) begin
        bi_1_reg_236 <= bi_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln574_fu_268_p2 == 1'd0) & (icmp_ln575_fu_280_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        bi_2_reg_248 <= bi_0_reg_169;
    end else if (((1'b1 == ap_CS_fsm_state13) & (((icmp_ln575_reg_521 == 1'd1) & (tmp_9_reg_615 == 1'd1)) | ((icmp_ln587_fu_471_p2 == 1'd0) & (icmp_ln575_reg_521 == 1'd1))))) begin
        bi_2_reg_248 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_fu_286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_i2_reg_192 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln484_fu_357_p2 == 1'd1))) begin
        i_0_i2_reg_192 <= i_6_reg_551;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln492_fu_433_p2 == 1'd1))) begin
        i_0_i3_reg_214 <= i_7_reg_587;
    end else if (((grp_Cipher_fu_259_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_0_i3_reg_214 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln574_fu_268_p2 == 1'd0) & (icmp_ln575_fu_280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_i_reg_181 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_i_reg_181 <= i_reg_528;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_0_reg_157 <= i_8_reg_516;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_157 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln491_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        k_0_i5_reg_225 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_0_i5_reg_225 <= k_1_reg_605;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        k_0_i_reg_203 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        k_0_i_reg_203 <= k_reg_569;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln492_fu_433_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        add_ln493_reg_610 <= add_ln493_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & ((icmp_ln575_reg_521 == 1'd0) | ((icmp_ln587_fu_471_p2 == 1'd0) | (tmp_9_reg_615 == 1'd1))))) begin
        bi_3_reg_642 <= bi_3_fu_500_p2;
        buf_addr_reg_632 <= zext_ln597_fu_490_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_9_fu_458_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        ctx_Iv_addr_1_reg_619 <= zext_ln587_fu_466_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_6_reg_551 <= i_6_fu_321_p2;
        zext_ln483_reg_543[4 : 2] <= zext_ln483_fu_311_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_7_reg_587 <= i_7_fu_397_p2;
        zext_ln491_reg_579[4 : 2] <= zext_ln491_fu_387_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_8_reg_516 <= i_8_fu_274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_528 <= i_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln574_fu_268_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln575_reg_521 <= icmp_ln575_fu_280_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_1_reg_605 <= k_1_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        k_reg_569 <= k_fu_363_p2;
        x_addr_reg_561 <= zext_ln485_2_fu_352_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln491_fu_391_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        shl_ln1_reg_592[3 : 2] <= shl_ln1_fu_407_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln483_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        shl_ln_reg_556[3 : 2] <= shl_ln_fu_331_p3[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_9_reg_615 <= bi_1_reg_236[32'd4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        zext_ln55_reg_533[4 : 0] <= zext_ln55_fu_298_p1[4 : 0];
    end
end

always @ (*) begin
    if ((((icmp_ln574_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (((icmp_ln575_reg_521 == 1'd1) & (tmp_9_reg_615 == 1'd1)) | ((icmp_ln587_fu_471_p2 == 1'd0) & (icmp_ln575_reg_521 == 1'd1))))) begin
        ap_phi_mux_bi_2_phi_fu_251_p4 = 32'd0;
    end else begin
        ap_phi_mux_bi_2_phi_fu_251_p4 = bi_2_reg_248;
    end
end

always @ (*) begin
    if (((icmp_ln574_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_r_address0 = buf_addr_reg_632;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        buf_r_address0 = zext_ln597_fu_490_p1;
    end else begin
        buf_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        buf_r_ce0 = 1'b1;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        buf_r_we0 = 1'b1;
    end else begin
        buf_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        buffer_address0 = sext_ln597_fu_495_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        buffer_address0 = zext_ln493_fu_450_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        buffer_address0 = zext_ln485_fu_374_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_address0 = zext_ln55_reg_533;
    end else begin
        buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state6))) begin
        buffer_ce0 = 1'b1;
    end else begin
        buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        buffer_d0 = x_q0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        buffer_d0 = ctx_Iv_q0;
    end else begin
        buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        buffer_we0 = 1'b1;
    end else begin
        buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln587_fu_471_p2 == 1'd0) & (tmp_9_reg_615 == 1'd0) & (icmp_ln575_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_9_reg_615 == 1'd0) & (icmp_ln575_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln587_fu_471_p2 == 1'd1)))) begin
        ctx_Iv_address0 = ctx_Iv_addr_1_reg_619;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        ctx_Iv_address0 = zext_ln587_fu_466_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ctx_Iv_address0 = zext_ln55_fu_298_p1;
    end else begin
        ctx_Iv_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state12) | ((icmp_ln587_fu_471_p2 == 1'd0) & (tmp_9_reg_615 == 1'd0) & (icmp_ln575_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_9_reg_615 == 1'd0) & (icmp_ln575_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln587_fu_471_p2 == 1'd1)))) begin
        ctx_Iv_ce0 = 1'b1;
    end else begin
        ctx_Iv_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_456)) begin
        if ((icmp_ln587_fu_471_p2 == 1'd0)) begin
            ctx_Iv_d0 = add_ln591_fu_483_p2;
        end else if ((icmp_ln587_fu_471_p2 == 1'd1)) begin
            ctx_Iv_d0 = 8'd0;
        end else begin
            ctx_Iv_d0 = 'bx;
        end
    end else begin
        ctx_Iv_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln587_fu_471_p2 == 1'd0) & (tmp_9_reg_615 == 1'd0) & (icmp_ln575_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((tmp_9_reg_615 == 1'd0) & (icmp_ln575_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln587_fu_471_p2 == 1'd1)))) begin
        ctx_Iv_we0 = 1'b1;
    end else begin
        ctx_Iv_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        x_address0 = zext_ln493_2_fu_428_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x_address0 = x_addr_reg_561;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_address0 = grp_Cipher_fu_259_state_address0;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state10))) begin
        x_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_ce0 = grp_Cipher_fu_259_state_ce0;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_ce1 = grp_Cipher_fu_259_state_ce1;
    end else begin
        x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x_d0 = buffer_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_d0 = grp_Cipher_fu_259_state_d0;
    end else begin
        x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        x_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_we0 = grp_Cipher_fu_259_state_we0;
    end else begin
        x_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_we1 = grp_Cipher_fu_259_state_we1;
    end else begin
        x_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln574_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln574_fu_268_p2 == 1'd0) & (icmp_ln575_fu_280_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln54_fu_286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln483_fu_315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln484_fu_357_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_Cipher_fu_259_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln491_fu_391_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln492_fu_433_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & ((icmp_ln575_reg_521 == 1'd0) | ((icmp_ln587_fu_471_p2 == 1'd0) | (tmp_9_reg_615 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln485_1_fu_347_p2 = (zext_ln483_reg_543 + zext_ln485_1_fu_343_p1);

assign add_ln485_fu_369_p2 = (zext_ln484_fu_339_p1 + shl_ln_reg_556);

assign add_ln493_1_fu_423_p2 = (zext_ln491_reg_579 + zext_ln493_1_fu_419_p1);

assign add_ln493_fu_445_p2 = (zext_ln492_fu_415_p1 + shl_ln1_reg_592);

assign add_ln591_fu_483_p2 = (ctx_Iv_q0 + 8'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_456 = ((tmp_9_reg_615 == 1'd0) & (icmp_ln575_reg_521 == 1'd1) & (1'b1 == ap_CS_fsm_state13));
end

assign bi_3_fu_500_p2 = ($signed(ap_phi_mux_bi_2_phi_fu_251_p4) + $signed(32'd1));

assign bi_fu_477_p2 = ($signed(bi_1_reg_236) + $signed(5'd31));

assign buf_r_d0 = (buffer_q0 ^ buf_r_q0);

assign ctx_RoundKey_address0 = grp_Cipher_fu_259_RoundKey_address0;

assign ctx_RoundKey_ce0 = grp_Cipher_fu_259_RoundKey_ce0;

assign grp_Cipher_fu_259_ap_start = grp_Cipher_fu_259_ap_start_reg;

assign i_6_fu_321_p2 = (i_0_i2_reg_192 + 3'd1);

assign i_7_fu_397_p2 = (i_0_i3_reg_214 + 3'd1);

assign i_8_fu_274_p2 = (i_0_reg_157 + 5'd1);

assign i_fu_292_p2 = (i_0_i_reg_181 + 5'd1);

assign icmp_ln483_fu_315_p2 = ((i_0_i2_reg_192 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln484_fu_357_p2 = ((k_0_i_reg_203 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln491_fu_391_p2 = ((i_0_i3_reg_214 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln492_fu_433_p2 = ((k_0_i5_reg_225 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_286_p2 = ((i_0_i_reg_181 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_268_p2 = ((i_0_reg_157 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln575_fu_280_p2 = ((bi_0_reg_169 == 32'd16) ? 1'b1 : 1'b0);

assign icmp_ln587_fu_471_p2 = ((ctx_Iv_q0 == 8'd255) ? 1'b1 : 1'b0);

assign k_1_fu_439_p2 = (k_0_i5_reg_225 + 3'd1);

assign k_fu_363_p2 = (k_0_i_reg_203 + 3'd1);

assign sext_ln585_fu_454_p1 = bi_1_reg_236;

assign sext_ln597_fu_495_p1 = ap_phi_mux_bi_2_phi_fu_251_p4;

assign shl_ln1_fu_407_p3 = {{trunc_ln493_fu_403_p1}, {2'd0}};

assign shl_ln_fu_331_p3 = {{trunc_ln485_fu_327_p1}, {2'd0}};

assign tmp_9_fu_458_p3 = bi_1_reg_236[32'd4];

assign tmp_fu_303_p3 = {{i_0_i2_reg_192}, {2'd0}};

assign tmp_s_fu_379_p3 = {{i_0_i3_reg_214}, {2'd0}};

assign trunc_ln485_fu_327_p1 = i_0_i2_reg_192[1:0];

assign trunc_ln493_fu_403_p1 = i_0_i3_reg_214[1:0];

assign zext_ln483_fu_311_p1 = tmp_fu_303_p3;

assign zext_ln484_fu_339_p1 = k_0_i_reg_203;

assign zext_ln485_1_fu_343_p1 = k_0_i_reg_203;

assign zext_ln485_2_fu_352_p1 = add_ln485_1_fu_347_p2;

assign zext_ln485_fu_374_p1 = add_ln485_fu_369_p2;

assign zext_ln491_fu_387_p1 = tmp_s_fu_379_p3;

assign zext_ln492_fu_415_p1 = k_0_i5_reg_225;

assign zext_ln493_1_fu_419_p1 = k_0_i5_reg_225;

assign zext_ln493_2_fu_428_p1 = add_ln493_1_fu_423_p2;

assign zext_ln493_fu_450_p1 = add_ln493_reg_610;

assign zext_ln55_fu_298_p1 = i_0_i_reg_181;

assign zext_ln587_fu_466_p1 = $unsigned(sext_ln585_fu_454_p1);

assign zext_ln597_fu_490_p1 = i_0_reg_157;

always @ (posedge ap_clk) begin
    zext_ln55_reg_533[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln483_reg_543[1:0] <= 2'b00;
    zext_ln483_reg_543[5] <= 1'b0;
    shl_ln_reg_556[1:0] <= 2'b00;
    zext_ln491_reg_579[1:0] <= 2'b00;
    zext_ln491_reg_579[5] <= 1'b0;
    shl_ln1_reg_592[1:0] <= 2'b00;
end

endmodule //AES_CTR_xcrypt_buffe
